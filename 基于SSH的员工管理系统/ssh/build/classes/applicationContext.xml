<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd 
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx.xsd">  
	
	<!-- 引入外部的属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	
	<!-- 
	Spring配置Action的类
	 -->
	<bean id="productAction" class="com.action.ProductAction" scope="prototype">
		<!-- 手动注入Service -->
		<property name="productService" ref="productService"/>
	</bean>

	
	
	
	
	
	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!-- 配置Hibernate的相关属性 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置Hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key='hibernate.hbm2ddl.auto'>update</prop>				
			</props>
		</property>
		
		<!-- 加载Hibernate中的映射文件 -->
		<property name="mappingResources">
			<list>
				<value>com/domain/Product.hbm.xml</value>
				<value>com/domain/Department.hbm.xml</value>
				<value>com/domain/Employee.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置action类 -->
	<bean id="employeeAction" class="com.action.EmployeeAction" scope="prototype">
		<property name="employeeService" ref="employeeService"/>
	</bean>
	
	<bean id="departmentAction" class="com.action.DepartmentAction" scope="prototype">
		<property name="departmentService" ref="departmentService"/>
	</bean>
	
	
	<!--业务层的类  -->
	<bean id="productService" class="com.service.ProductService">
		<property name="productDao" ref="productDao"/>
	</bean>
	<bean id="employeeService" class="com.service.impl.EmployeeServiceImpl">
		<property name="employeeDao" ref="employeeDao"/>
	</bean>
	<bean id="departmentService" class="com.service.impl.DepartmentServiceImpl">
		<property name="departmentDao" ref="departmentDao"/>
	</bean>
	

	<!-- Dao层的类 -->
	<bean id="productDao" class="com.dao.ProductDao">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="employeeDao" class="com.dao.impl.EmployeeDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="departmentDao" class="com.dao.impl.DepartmentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 开启注解事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	<!-- 
	Struts2和Spring整合的两种方式：
	1、Action的类由Struts2自身去创建
	2、Action的类交给Spring框架创建
	 -->
	
</beans>